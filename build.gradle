plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'dododocs'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	snippetsDir = file('build/generated-snippets') // (3)
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JWT 를 위한 의존성
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// AWS S3를 위한 의존성
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// 테스트 환경을 위한 의존성
	testImplementation 'io.rest-assured:rest-assured'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.563'
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor { // (7)
	configurations 'asciidoctorExtensions' // (8)
	inputs.dir snippetsDir // (9)
	dependsOn test // (10)
	sources {
		include("**/index.adoc")
	}
	baseDirFollowsSourceFile()
}

tasks.named('asciidoctor') {
	doLast {
		copy {
			from "${asciidoctor.outputDir}"
			into "src/main/resources/static/docs"
		}
	}
}

tasks.named('build') {
	dependsOn asciidoctor
}
